// <auto-generated />
using Class1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Console_Runner.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Console_Runner.Authorization+Role_User", b =>
                {
                    b.Property<int>("accessLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("accessLevel");

                    b.ToTable("Role_User");
                });

            modelBuilder.Entity("Logger.Logs", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Time")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("toLog")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Date", "Time", "toLog");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("User.Account", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("accessLevel")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("roleaccessLevel")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.HasIndex("roleaccessLevel");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("User.Account", b =>
                {
                    b.HasOne("Console_Runner.Authorization+Role_User", "role")
                        .WithMany()
                        .HasForeignKey("roleaccessLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });
#pragma warning restore 612, 618
        }
    }
}
